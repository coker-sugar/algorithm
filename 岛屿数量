200. 岛屿数量
已解答
中等
相关标签
相关企业
给你一个由 '1'（陆地）和 '0'（水）组成的的二维网格，请你计算网格中岛屿的数量。

岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。

此外，你可以假设该网格的四条边均被水包围。

示例 1：


输入：grid = [
  ["1","1","1","1","0"],
  ["1","1","0","1","0"],
  ["1","1","0","0","0"],
  ["0","0","0","0","0"]
]
输出：1
示例 2：

输入：grid = [
  ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
]
输出：3
 

提示：

m == grid.length
n == grid[i].length
1 <= m, n <= 300
grid[i][j] 的值为 '0' 或 '1'


class Solution {
    int rowLength = 0;
    int cloumnLength = 0;
    public int numIslands(char[][] grid) {
        if(grid == null || grid.length == 0) return 0;
        rowLength = grid.length;
        cloumnLength = grid[0].length;
        int count = 0;
        for(int i = 0;i < rowLength;i++) {
            for(int j = 0;j < cloumnLength;j ++) {
                if(grid[i][j] == '1') {
                    dfs(grid,i,j);
                    count++;
                }
            }
        }
        return count;
    }
    public void dfs(char[][] grid,int row,int cloumn) {
        if(0 > row || row >= rowLength || 0 > cloumn || cloumn >= cloumnLength) return;
        if(grid[row][cloumn] != '1') return;
        grid[row][cloumn] = '2';
        dfs(grid,row - 1,cloumn);
        dfs(grid,row + 1,cloumn);
        dfs(grid,row,cloumn + 1);
        dfs(grid,row,cloumn - 1);
    }
}
