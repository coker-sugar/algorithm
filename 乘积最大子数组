152. 乘积最大子数组
已解答
中等
相关标签
相关企业
给你一个整数数组 nums ，请你找出数组中乘积最大的非空连续子数组（该子数组中至少包含一个数字），并返回该子数组所对应的乘积。
测试用例的答案是一个 32-位 整数。

子数组 是数组的连续子序列。

示例 1:

输入: nums = [2,3,-2,4]
输出: 6
解释: 子数组 [2,3] 有最大乘积 6。
示例 2:

输入: nums = [-2,0,-1]
输出: 0
解释: 结果不能为 2, 因为 [-2,-1] 不是子数组。

class Solution {
    public int maxProduct(int[] nums) {
        // 最核心的就是：
            // 除了要记录最大值的乘积，还要记录最小值，因为中途可能会频繁遇见负数
            // 遇到负数的时候，当前最大值和最小值做一个交换；

        // 定义一个初始值最大值，当前最大值，当前最小值
        int max = nums[0],imax = 1,imin = 1;
        // 遍历数组
        for(int i = 0;i < nums.length;i ++) {
            // 如果遇到负数，交换最大最小值
            if(nums[i] < 0) {
                int temp = imax;
                imax = imin;
                imin = temp;
            }
            // 当前最大值为 当前最大值*nums[i]与nums[i]作比较
            imax = Math.max(imax*nums[i],nums[i]);
            // 当前最小值为 当前最小值*nums[i]与nums[i]作比较
            imin = Math.min(imin*nums[i],nums[i]);
            // 最大值为 最大值和当前最大值比较
            max = Math.max(max,imax);
        }
        // 返回最大值
        return max;
    }
}
