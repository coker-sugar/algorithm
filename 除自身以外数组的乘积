238. 除自身以外数组的乘积
中等
相关标签
相关企业
给你一个整数数组 nums，返回 数组 answer ，其中 answer[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积 。

题目数据 保证 数组 nums之中任意元素的全部前缀元素和后缀的乘积都在  32 位 整数范围内。

请 不要使用除法，且在 O(n) 时间复杂度内完成此题。

示例 1:
输入: nums = [1,2,3,4]
输出: [24,12,8,6]

示例 2:
输入: nums = [-1,1,0,-3,3]
输出: [0,0,9,0,0]


// 方法一：左右数组
class Solution {
    public int[] productExceptSelf(int[] nums) {
        // 当前数组元素以外的数组乘积 = 左边乘积 * 右边乘积
        // 定义左右数组，左数组放当前元素以前的乘积，右数组放当前元素后面的乘积
        int len = nums.length;
        int[] leftnums = new int[len];
        int[] rightnums = new int[len];
        int[] arr = new int[len];
        // 当前元素的前面所有乘积
        leftnums[0] = 1;
        for(int i = 1;i < nums.length;i ++) {
            leftnums[i] = leftnums[i - 1] * nums[i - 1];
        }
        // 当前元素后面的所有乘积
        rightnums[len - 1] = 1;
        for(int i = len - 2;i >= 0;i --) {
            rightnums[i] = rightnums[i + 1] * nums[i + 1];
        }
        for(int i = 0;i < len ; i ++) {
            arr[i] = leftnums[i] * rightnums[i];
        }
        return arr;
    }
}

// 方法二：右指针
class Solution {
    public int[] productExceptSelf(int[] nums) {
        // 先把左边的数组积给求出来放数组中，再去和右边的相乘(右边的积用一个指针就能存储)
        int len = nums.length;
        int[] arr = new int[len];
        // 把当前数左边的数组乘积求出来并放入返回数组中
        arr[0] = 1;
        for(int i = 1; i < len; i ++) {
            arr[i] = nums[i - 1] * arr[i - 1];
        }
        // 从数组右边开始遍历，返回数组中当前索引的值乘以右边的值
        int right = 1;
        // 注意这里是 --
        for(int i = len - 1; i >= 0; i --) {
            arr[i] = arr[i] * right;
            right *= nums[i];
        }
        return arr;
    }
}



