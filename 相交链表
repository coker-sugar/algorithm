public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        // 把a链表中的节点放入hash表visited中
        // 然后遍历b链表，如果当前遍历到的节点在visited中，则返回当前节点
        // 否则向后移动直到链表末尾
        if(headA == null || headB == null) return null;
        Set<ListNode> visited = new HashSet<ListNode>();
        ListNode temp = headA;
        while(temp != null) {
            visited.add(temp);
            temp = temp.next;
        }
        temp = headB;
        while(temp != null) {
            if(visited.contains(temp)) {
                return temp;
            }
            temp = temp.next;
        }
        return null;
    }
}
