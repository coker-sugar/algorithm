98. 验证二叉搜索树
尝试过
中等
相关标签
相关企业
给你一个二叉树的根节点 root ，判断其是否是一个有效的二叉搜索树。

有效 二叉搜索树定义如下：

节点的左子树只包含 小于 当前节点的数。
节点的右子树只包含 大于 当前节点的数。
所有左子树和右子树自身必须也是二叉搜索树。
 

示例 1：


输入：root = [2,1,3]
输出：true

这个会出现下面的值，右边的比上面的值小
class Solution {
    boolean isValid = true;
    public boolean isValidBST(TreeNode root) {
        isvalid(root);
        return isValid;
    }
    public void isvalid(TreeNode root) {
        if(root == null) return;
        if(root.left !=null && root.left.val >= root.val ) isValid = false;
        if(root.right != null && root.right.val <= root.val) isValid = false;
        isvalid(root.left);
        isvalid(root.right);
    }
}
既然这样，那就把最小值和最大值带入进去，作为循环的一部分
class Solution {
    boolean isValid = true;
    public boolean isValidBST(TreeNode root) {
        return isvalid(root,Long.MIN_VALUE,Long.MAX_VALUE);
    }
    public boolean isvalid(TreeNode node,long left,long right) {
        if(node == null) return true;
        if(node.val >= right || node.val <= left) return false;
        return isvalid(node.left,left,node.val) && isvalid(node.right,node.val,right);
    }
}
