287. 寻找重复数
已解答
中等
相关标签
相关企业
给定一个包含 n + 1 个整数的数组 nums ，其数字都在 [1, n] 范围内（包括 1 和 n），可知至少存在一个重复的整数。

假设 nums 只有 一个重复的整数 ，返回 这个重复的数 。

你设计的解决方案必须 不修改 数组 nums 且只用常量级 O(1) 的额外空间。


示例 1：

输入：nums = [1,3,4,2,2]
输出：2
示例 2：

输入：nums = [3,1,3,4,2]
输出：3

对标循环链表
class Solution {
    public int findDuplicate(int[] nums) {
        // 1234 5675 实际上到5就是一个环,数组一直在5675这个环里面跑
        // 定义快慢指针
        int slow = 0,fast = 0;
        // 只要快慢指针不等
        do {
            slow = nums[slow];
            fast = nums[nums[fast]];
        } while (slow != fast);
        // 慢指针向后移动一次，快指针向后移动两次
        
        // 这里重新遍历一遍是为了应对单数循环
        // 慢指针置为0
        slow = 0;
        // 只要快慢指针不等
        while (slow != fast) {
            // 慢指针向后移动一位，快指针向后移动一位
            slow = nums[slow];
            fast = nums[fast];
        }
        // 返回慢指针
        return slow;

    }
}
