74. 搜索二维矩阵
已解答
中等
相关标签
相关企业
给你一个满足下述两条属性的 m x n 整数矩阵：

每行中的整数从左到右按非严格递增顺序排列。
每行的第一个整数大于前一行的最后一个整数。
给你一个整数 target ，如果 target 在矩阵中，返回 true ；否则，返回 false 。

示例 1：
输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
输出：true

示例 2：
输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13
输出：false
 

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
       int xlen = matrix.length,ylen = matrix[0].length;
       boolean IsHave = false;
       for(int i = 0;i < xlen ;i ++) {
           if(matrix[i][0] > target) break;
           int left = 0,right = ylen - 1;
           while(left <= right) {
               int mid = (right - left) / 2 + left;
               if(matrix[i][mid] == target) {
                   IsHave = true;
                   break;
               } else if(matrix[i][mid] > target) {
                   right = mid - 1;
               } else {
                   left = mid + 1;
               }
           }
       }
       return IsHave;
    }
}

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        // 如果当前值大于target，上移
        // 当前值小于target，右移
       int xlen = matrix.length - 1,col = 0;
       while(xlen >= 0 && col < matrix[0].length) {
           int num = matrix[xlen][col];
           if(num == target) return true;
           else if(target < num) xlen --;
           else {
               col ++;
           }
       }
       return false;
    }
}
