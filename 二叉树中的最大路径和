124. 二叉树中的最大路径和
已解答
困难
相关标签
相关企业
二叉树中的 路径 被定义为一条节点序列，序列中每对相邻节点之间都存在一条边。同一个节点在一条路径序列中 至多出现一次 。该路径 至少包含一个 节点，且不一定经过根节点。
路径和 是路径中各节点值的总和。
给你一个二叉树的根节点 root ，返回其 最大路径和 。
 
示例 1：

输入：root = [1,2,3]
输出：6
解释：最优路径是 2 -> 1 -> 3 ，路径和为 2 + 1 + 3 = 6
示例 2：

输入：root = [-10,9,20,null,null,15,7]
输出：42
解释：最优路径是 15 -> 20 -> 7 ，路径和为 15 + 20 + 7 = 42

class Solution {
    // 定义一个最大值为Integer.MIN_VALUE
    int maxValue = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        // 执行maxGain拿到最大值
        maxGain(root);
        return maxValue;
    }
    public int maxGain(TreeNode node) {
        // 如果最大值为null返回0
        if(node == null) return 0;
        // 拿到根的左右子树的贡献值，只有贡献值大于0才计入
        int left = Math.max(maxGain(node.left),0);
        int right = Math.max(maxGain(node.right),0);
        // 求得经过当前节点路径的最大值
        int priceValue = node.val + left + right;
        // 更新最大值
        maxValue = Math.max(maxValue,priceValue);
        // 返回当前节点的最大贡献值
        return node.val + Math.max(left,right);
    }
}
 
