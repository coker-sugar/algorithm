45. 跳跃游戏 II
已解答
中等
相关标签
相关企业
给定一个长度为 n 的 0 索引整数数组 nums。初始位置为 nums[0]。

每个元素 nums[i] 表示从索引 i 向前跳转的最大长度。换句话说，如果你在 nums[i] 处，你可以跳转到任意 nums[i + j] 处:

0 <= j <= nums[i] 
i + j < n
返回到达 nums[n - 1] 的最小跳跃次数。生成的测试用例可以到达 nums[n - 1]。

class Solution {
    public int jump(int[] nums) {
        // 这里的贪心算法：记录每一次能跳得最远的距离
        // 题目中的测试用例一定能够到达最后一个点

        // 记录跳跃的起点和终点，跳跃次数
        int start = 0, end = 1,count = 0;
        // 只要没有跳到末尾
        while(end < nums.length) {
            // 记录能跳的最远距离
            int maxJump = 0;
            for(int i = start;i < end;i ++) {
                maxJump = Math.max(maxJump,i + nums[i]);
            }
            // 更新起点和终点，跳数+1
            start = end;
            end = maxJump + 1;
            count ++;
        }
        return count;
    }
}



class Solution {
    public int jump(int[] nums) {
        // 优化解法，count是在跳板末尾时才+1的，所以我们只需要把握住这个时机+1即可
        // 同时while循环中for循环是从头开始循环的，故我们从头开始循环便足够解决问题
        int count = 0,end = 0,maxJump = 0;
        for(int i = 0;i < nums.length - 1;i ++) { // 这里要注意 -1 ，因为末尾是不需要记录的
            maxJump = Math.max(maxJump,i + nums[i]);
            if(i == end) {
                end = maxJump;
                count ++;
            }
        }
        return count;
      }
}
