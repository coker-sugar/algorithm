35. 搜索插入位置
已解答
简单
相关标签
相关企业
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

请必使用时间复杂度为 O(log n) 的算法。

示例 1:
输入: nums = [1,3,5,6], target = 5
输出: 2

示例 2:
输入: nums = [1,3,5,6], target = 2

输出: 1

示例 3:
输入: nums = [1,3,5,6], target = 7

class Solution {
    public int searchInsert(int[] nums, int target) {
        int leng = nums.length;
        Arrays.sort(nums);
        if(nums[leng-1] < target) return leng;
        int left = 0,right = leng - 1;
        while(left <= right) {
            int mid = (right - left) / 2 + left;
            if(target > nums[mid]) {
                left = mid + 1;
            } else if(target < nums[mid]) {
                if(mid == 0) return 0;
                else if(nums[mid - 1] < target) return mid;
                right = mid - 1;
            } else {
                return mid;
            }
        }

简化版本
class Solution {
    public int searchInsert(int[] nums, int target) {
        int leng = nums.length;
        if(nums[leng-1] < target) return leng;
        int left = 0,right = leng - 1,ans = leng;
        while(left <= right) {
            int mid = (right - left) / 2 + left;
            if(target > nums[mid]) {
                left = mid + 1;
            } else {
                ans = mid;
                right = right - 1;
            }
        }
        return ans;
    }
}
        return 0;
    }
}
