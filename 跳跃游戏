55. 跳跃游戏
已解答
中等
相关标签
相关企业
给你一个非负整数数组 nums ，你最初位于数组的 第一个下标 。数组中的每个元素代表你在该位置可以跳跃的最大长度。

判断你是否能够到达最后一个下标，如果可以，返回 true ；否则，返回 false 。


示例 1：
输入：nums = [2,3,1,1,4]
输出：true
解释：可以先跳 1 步，从下标 0 到达下标 1, 然后再从下标 1 跳 3 步到达最后一个下标。
示例 2：

输入：nums = [3,2,1,0,4]
输出：false
解释：无论怎样，总会到达下标为 3 的位置。但该下标的最大跳跃长度是 0 ， 所以永远不可能到达最后一个下标。


class Solution {
    public boolean canJump(int[] nums) {
        // 遍历每一个点，如果当前点的索引比前面所有点可到达的最远距离的点的索引还大，那说明是到不了最后一个点的，返回false
        // 如果遍历到了最后一个点，那就说明是可以到达最后一个点的，返回true

        int k = 0; // 记录之前所有的点可到达最远距离点的索引
        for(int i = 0;i < nums.length;i ++) {
            if(i > k) return false; // 当前索引比可达最远距离的点的索引大 ——> 前面怎么也到不了当前的点
            k = Math.max(k,i + nums[i]);
        }
        return true;
    }
}


